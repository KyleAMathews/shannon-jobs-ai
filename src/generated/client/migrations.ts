export default [
  {
    "statements": [
      "CREATE TABLE \"read_jobs\" (\n  \"id\" TEXT NOT NULL,\n  \"job_id\" TEXT NOT NULL,\n  \"created_at\" TEXT,\n  CONSTRAINT \"read_jobs_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"jobs\" (\n  \"job_id\" TEXT NOT NULL,\n  \"title\" TEXT,\n  \"company_name\" TEXT,\n  \"location\" TEXT,\n  \"via\" TEXT,\n  \"description\" TEXT,\n  \"job_highlights\" TEXT_JSON,\n  \"related_links\" TEXT_JSON,\n  \"thumbnail\" TEXT,\n  \"extensions\" TEXT_JSON,\n  \"detected_extensions\" TEXT_JSON,\n  \"would_shannon_like_this_job\" INTEGER,\n  \"pros\" TEXT_JSON,\n  \"cons\" TEXT_JSON,\n  \"job_summary\" TEXT,\n  \"created_at\" TEXT,\n  \"google_jobs_listing_url\" TEXT,\n  \"apply_options\" TEXT_JSON,\n  CONSTRAINT \"jobs_pkey\" PRIMARY KEY (\"job_id\")\n) WITHOUT ROWID;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.read_jobs', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_read_jobs_primarykey;",
      "CREATE TRIGGER update_ensure_main_read_jobs_primarykey\n  BEFORE UPDATE ON \"main\".\"read_jobs\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_read_jobs_into_oplog;",
      "CREATE TRIGGER insert_main_read_jobs_into_oplog\n   AFTER INSERT ON \"main\".\"read_jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.read_jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'read_jobs', 'INSERT', json_object('id', new.\"id\"), json_object('created_at', new.\"created_at\", 'id', new.\"id\", 'job_id', new.\"job_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_read_jobs_into_oplog;",
      "CREATE TRIGGER update_main_read_jobs_into_oplog\n   AFTER UPDATE ON \"main\".\"read_jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.read_jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'read_jobs', 'UPDATE', json_object('id', new.\"id\"), json_object('created_at', new.\"created_at\", 'id', new.\"id\", 'job_id', new.\"job_id\"), json_object('created_at', old.\"created_at\", 'id', old.\"id\", 'job_id', old.\"job_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_read_jobs_into_oplog;",
      "CREATE TRIGGER delete_main_read_jobs_into_oplog\n   AFTER DELETE ON \"main\".\"read_jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.read_jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'read_jobs', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('created_at', old.\"created_at\", 'id', old.\"id\", 'job_id', old.\"job_id\"), NULL);\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.jobs', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_jobs_primarykey;",
      "CREATE TRIGGER update_ensure_main_jobs_primarykey\n  BEFORE UPDATE ON \"main\".\"jobs\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"job_id\" != new.\"job_id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column job_id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_jobs_into_oplog;",
      "CREATE TRIGGER insert_main_jobs_into_oplog\n   AFTER INSERT ON \"main\".\"jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'jobs', 'INSERT', json_object('job_id', new.\"job_id\"), json_object('apply_options', new.\"apply_options\", 'company_name', new.\"company_name\", 'cons', new.\"cons\", 'created_at', new.\"created_at\", 'description', new.\"description\", 'detected_extensions', new.\"detected_extensions\", 'extensions', new.\"extensions\", 'google_jobs_listing_url', new.\"google_jobs_listing_url\", 'job_highlights', new.\"job_highlights\", 'job_id', new.\"job_id\", 'job_summary', new.\"job_summary\", 'location', new.\"location\", 'pros', new.\"pros\", 'related_links', new.\"related_links\", 'thumbnail', new.\"thumbnail\", 'title', new.\"title\", 'via', new.\"via\", 'would_shannon_like_this_job', new.\"would_shannon_like_this_job\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_jobs_into_oplog;",
      "CREATE TRIGGER update_main_jobs_into_oplog\n   AFTER UPDATE ON \"main\".\"jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'jobs', 'UPDATE', json_object('job_id', new.\"job_id\"), json_object('apply_options', new.\"apply_options\", 'company_name', new.\"company_name\", 'cons', new.\"cons\", 'created_at', new.\"created_at\", 'description', new.\"description\", 'detected_extensions', new.\"detected_extensions\", 'extensions', new.\"extensions\", 'google_jobs_listing_url', new.\"google_jobs_listing_url\", 'job_highlights', new.\"job_highlights\", 'job_id', new.\"job_id\", 'job_summary', new.\"job_summary\", 'location', new.\"location\", 'pros', new.\"pros\", 'related_links', new.\"related_links\", 'thumbnail', new.\"thumbnail\", 'title', new.\"title\", 'via', new.\"via\", 'would_shannon_like_this_job', new.\"would_shannon_like_this_job\"), json_object('apply_options', old.\"apply_options\", 'company_name', old.\"company_name\", 'cons', old.\"cons\", 'created_at', old.\"created_at\", 'description', old.\"description\", 'detected_extensions', old.\"detected_extensions\", 'extensions', old.\"extensions\", 'google_jobs_listing_url', old.\"google_jobs_listing_url\", 'job_highlights', old.\"job_highlights\", 'job_id', old.\"job_id\", 'job_summary', old.\"job_summary\", 'location', old.\"location\", 'pros', old.\"pros\", 'related_links', old.\"related_links\", 'thumbnail', old.\"thumbnail\", 'title', old.\"title\", 'via', old.\"via\", 'would_shannon_like_this_job', old.\"would_shannon_like_this_job\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_jobs_into_oplog;",
      "CREATE TRIGGER delete_main_jobs_into_oplog\n   AFTER DELETE ON \"main\".\"jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'jobs', 'DELETE', json_object('job_id', old.\"job_id\"), NULL, json_object('apply_options', old.\"apply_options\", 'company_name', old.\"company_name\", 'cons', old.\"cons\", 'created_at', old.\"created_at\", 'description', old.\"description\", 'detected_extensions', old.\"detected_extensions\", 'extensions', old.\"extensions\", 'google_jobs_listing_url', old.\"google_jobs_listing_url\", 'job_highlights', old.\"job_highlights\", 'job_id', old.\"job_id\", 'job_summary', old.\"job_summary\", 'location', old.\"location\", 'pros', old.\"pros\", 'related_links', old.\"related_links\", 'thumbnail', old.\"thumbnail\", 'title', old.\"title\", 'via', old.\"via\", 'would_shannon_like_this_job', old.\"would_shannon_like_this_job\"), NULL);\nEND;"
    ],
    "version": "1"
  },
  {
    "statements": [
      "ALTER TABLE \"read_jobs\" ADD COLUMN \"why\" TEXT;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.read_jobs', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_read_jobs_primarykey;",
      "CREATE TRIGGER update_ensure_main_read_jobs_primarykey\n  BEFORE UPDATE ON \"main\".\"read_jobs\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_read_jobs_into_oplog;",
      "CREATE TRIGGER insert_main_read_jobs_into_oplog\n   AFTER INSERT ON \"main\".\"read_jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.read_jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'read_jobs', 'INSERT', json_object('id', new.\"id\"), json_object('created_at', new.\"created_at\", 'id', new.\"id\", 'job_id', new.\"job_id\", 'why', new.\"why\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_read_jobs_into_oplog;",
      "CREATE TRIGGER update_main_read_jobs_into_oplog\n   AFTER UPDATE ON \"main\".\"read_jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.read_jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'read_jobs', 'UPDATE', json_object('id', new.\"id\"), json_object('created_at', new.\"created_at\", 'id', new.\"id\", 'job_id', new.\"job_id\", 'why', new.\"why\"), json_object('created_at', old.\"created_at\", 'id', old.\"id\", 'job_id', old.\"job_id\", 'why', old.\"why\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_read_jobs_into_oplog;",
      "CREATE TRIGGER delete_main_read_jobs_into_oplog\n   AFTER DELETE ON \"main\".\"read_jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.read_jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'read_jobs', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('created_at', old.\"created_at\", 'id', old.\"id\", 'job_id', old.\"job_id\", 'why', old.\"why\"), NULL);\nEND;"
    ],
    "version": "2"
  },
  {
    "statements": [
      "ALTER TABLE \"jobs\" ADD COLUMN \"company_info\" TEXT;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.jobs', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_jobs_primarykey;",
      "CREATE TRIGGER update_ensure_main_jobs_primarykey\n  BEFORE UPDATE ON \"main\".\"jobs\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"job_id\" != new.\"job_id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column job_id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_jobs_into_oplog;",
      "CREATE TRIGGER insert_main_jobs_into_oplog\n   AFTER INSERT ON \"main\".\"jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'jobs', 'INSERT', json_object('job_id', new.\"job_id\"), json_object('apply_options', new.\"apply_options\", 'company_info', new.\"company_info\", 'company_name', new.\"company_name\", 'cons', new.\"cons\", 'created_at', new.\"created_at\", 'description', new.\"description\", 'detected_extensions', new.\"detected_extensions\", 'extensions', new.\"extensions\", 'google_jobs_listing_url', new.\"google_jobs_listing_url\", 'job_highlights', new.\"job_highlights\", 'job_id', new.\"job_id\", 'job_summary', new.\"job_summary\", 'location', new.\"location\", 'pros', new.\"pros\", 'related_links', new.\"related_links\", 'thumbnail', new.\"thumbnail\", 'title', new.\"title\", 'via', new.\"via\", 'would_shannon_like_this_job', new.\"would_shannon_like_this_job\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_jobs_into_oplog;",
      "CREATE TRIGGER update_main_jobs_into_oplog\n   AFTER UPDATE ON \"main\".\"jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'jobs', 'UPDATE', json_object('job_id', new.\"job_id\"), json_object('apply_options', new.\"apply_options\", 'company_info', new.\"company_info\", 'company_name', new.\"company_name\", 'cons', new.\"cons\", 'created_at', new.\"created_at\", 'description', new.\"description\", 'detected_extensions', new.\"detected_extensions\", 'extensions', new.\"extensions\", 'google_jobs_listing_url', new.\"google_jobs_listing_url\", 'job_highlights', new.\"job_highlights\", 'job_id', new.\"job_id\", 'job_summary', new.\"job_summary\", 'location', new.\"location\", 'pros', new.\"pros\", 'related_links', new.\"related_links\", 'thumbnail', new.\"thumbnail\", 'title', new.\"title\", 'via', new.\"via\", 'would_shannon_like_this_job', new.\"would_shannon_like_this_job\"), json_object('apply_options', old.\"apply_options\", 'company_info', old.\"company_info\", 'company_name', old.\"company_name\", 'cons', old.\"cons\", 'created_at', old.\"created_at\", 'description', old.\"description\", 'detected_extensions', old.\"detected_extensions\", 'extensions', old.\"extensions\", 'google_jobs_listing_url', old.\"google_jobs_listing_url\", 'job_highlights', old.\"job_highlights\", 'job_id', old.\"job_id\", 'job_summary', old.\"job_summary\", 'location', old.\"location\", 'pros', old.\"pros\", 'related_links', old.\"related_links\", 'thumbnail', old.\"thumbnail\", 'title', old.\"title\", 'via', old.\"via\", 'would_shannon_like_this_job', old.\"would_shannon_like_this_job\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_jobs_into_oplog;",
      "CREATE TRIGGER delete_main_jobs_into_oplog\n   AFTER DELETE ON \"main\".\"jobs\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.jobs')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'jobs', 'DELETE', json_object('job_id', old.\"job_id\"), NULL, json_object('apply_options', old.\"apply_options\", 'company_info', old.\"company_info\", 'company_name', old.\"company_name\", 'cons', old.\"cons\", 'created_at', old.\"created_at\", 'description', old.\"description\", 'detected_extensions', old.\"detected_extensions\", 'extensions', old.\"extensions\", 'google_jobs_listing_url', old.\"google_jobs_listing_url\", 'job_highlights', old.\"job_highlights\", 'job_id', old.\"job_id\", 'job_summary', old.\"job_summary\", 'location', old.\"location\", 'pros', old.\"pros\", 'related_links', old.\"related_links\", 'thumbnail', old.\"thumbnail\", 'title', old.\"title\", 'via', old.\"via\", 'would_shannon_like_this_job', old.\"would_shannon_like_this_job\"), NULL);\nEND;"
    ],
    "version": "3"
  }
]